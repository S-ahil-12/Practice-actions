name: test deployment

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Or your preferred runner

    steps:
      - uses: actions/checkout@v3  # Checkout code from repository

      - name: Setup Node.js environment
        uses: actions/setup-node@v3  # Combined setup for efficiency
        with:
          node-version: 20  # Adjust based on your project's requirements

      - name: Install Angular CLI
        run: npm install -g @angular/cli --force  # Install globally

      - name: Install project dependencies
        run: npm ci  # Use npm ci or yarn install based on your project setup

      - name: Build frontend application
        run: npm run build  # Or your build command

      - name: Build Docker image
        run: docker build -t ${{ secrets.TEST_DOCKER_USERNAME }}/test .

      - name: Login to Docker Hub (securely using a login action)
        uses: docker/login-action@v2  # Use a dedicated action for better security
        with:
          username: ${{ secrets.TEST_DOCKER_USERNAME }}
          password: ${{ secrets.TEST_DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.TEST_DOCKER_USERNAME }}/test

      - name: SSH to Instance (secure private key handling)
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > my-ssh-key.pem  #Securely handle private key within the step
          chmod 400 my-ssh-key.pem
          ssh -o StrictHostKeyChecking=no -i my-ssh-key.pem ubuntu@$${{ secrets.TEST_SSH_HOST }} 
          # Commands within the script block
          sudo docker login -u ${{ secrets.TEST_DOCKER_USERNAME }} -p ${{ secrets.TEST_DOCKER_PASSWORD }}
          sudo docker pull ${{ secrets.TEST_DOCKER_USERNAME }}/test
          CONTAINER_NAME="uppo-frontend-${UNIQUE_ID}"
          echo "Starting Docker container..."
          sudo docker run -d --name $CONTAINER_NAME -p 80:80 ${{ secrets.TEST_DOCKER_USERNAME }}/test
          echo "Docker frontend container started......."

          # Remove temporary key file after execution
          rm my-ssh-key.pem

